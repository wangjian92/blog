{"remainingRequest":"/Users/wangjian/Documents/wjwork/gitwork/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjian/Documents/wjwork/gitwork/blog/node_modules/vuepress-theme-reco/components/NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjian/Documents/wjwork/gitwork/blog/node_modules/vuepress-theme-reco/components/NavLinks.vue","mtime":1585894233153},{"path":"/Users/wangjian/Documents/wjwork/gitwork/blog/node_modules/cache-loader/dist/cjs.js","mtime":1585894221775},{"path":"/Users/wangjian/Documents/wjwork/gitwork/blog/node_modules/babel-loader/lib/index.js","mtime":1585894221732},{"path":"/Users/wangjian/Documents/wjwork/gitwork/blog/node_modules/cache-loader/dist/cjs.js","mtime":1585894221775},{"path":"/Users/wangjian/Documents/wjwork/gitwork/blog/node_modules/vue-loader/lib/index.js","mtime":1585894222068}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEcm9wZG93bkxpbmsgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvRHJvcGRvd25MaW5rLnZ1ZScKaW1wb3J0IHsgcmVzb2x2ZU5hdkxpbmtJdGVtIH0gZnJvbSAnLi4vdXRpbCcKaW1wb3J0IE5hdkxpbmsgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2TGluay52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBOYXZMaW5rLCBEcm9wZG93bkxpbmsgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIHVzZXJOYXYgKCkgewogICAgICByZXR1cm4gdGhpcy4kdGhlbWVMb2NhbGVDb25maWcubmF2IHx8IHRoaXMuJHRoZW1lQ29uZmlnLm5hdiB8fCBbXQogICAgfSwKCiAgICBuYXYgKCkgewogICAgICBjb25zdCB7ICRzaXRlOiB7IGxvY2FsZXMgfSwgdXNlck5hdiB9ID0gdGhpcwogICAgICBpZiAobG9jYWxlcyAmJiBPYmplY3Qua2V5cyhsb2NhbGVzKS5sZW5ndGggPiAxKSB7CiAgICAgICAgY29uc3QgY3VycmVudExpbmsgPSB0aGlzLiRwYWdlLnBhdGgKICAgICAgICBjb25zdCByb3V0ZXMgPSB0aGlzLiRyb3V0ZXIub3B0aW9ucy5yb3V0ZXMKICAgICAgICBjb25zdCB0aGVtZUxvY2FsZXMgPSB0aGlzLiR0aGVtZUNvbmZpZy5sb2NhbGVzIHx8IHt9CiAgICAgICAgY29uc3QgbGFuZ3VhZ2VEcm9wZG93biA9IHsKICAgICAgICAgIHRleHQ6IHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLnNlbGVjdFRleHQgfHwgJ0xhbmd1YWdlcycsCiAgICAgICAgICBpdGVtczogT2JqZWN0LmtleXMobG9jYWxlcykubWFwKHBhdGggPT4gewogICAgICAgICAgICBjb25zdCBsb2NhbGUgPSBsb2NhbGVzW3BhdGhdCiAgICAgICAgICAgIGNvbnN0IHRleHQgPSB0aGVtZUxvY2FsZXNbcGF0aF0gJiYgdGhlbWVMb2NhbGVzW3BhdGhdLmxhYmVsIHx8IGxvY2FsZS5sYW5nCiAgICAgICAgICAgIGxldCBsaW5rCiAgICAgICAgICAgIC8vIFN0YXkgb24gdGhlIGN1cnJlbnQgcGFnZQogICAgICAgICAgICBpZiAobG9jYWxlLmxhbmcgPT09IHRoaXMuJGxhbmcpIHsKICAgICAgICAgICAgICBsaW5rID0gY3VycmVudExpbmsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBUcnkgdG8gc3RheSBvbiB0aGUgc2FtZSBwYWdlCiAgICAgICAgICAgICAgbGluayA9IGN1cnJlbnRMaW5rLnJlcGxhY2UodGhpcy4kbG9jYWxlQ29uZmlnLnBhdGgsIHBhdGgpCiAgICAgICAgICAgICAgLy8gZmFsbGJhY2sgdG8gaG9tZXBhZ2UKICAgICAgICAgICAgICBpZiAoIXJvdXRlcy5zb21lKHJvdXRlID0+IHJvdXRlLnBhdGggPT09IGxpbmspKSB7CiAgICAgICAgICAgICAgICBsaW5rID0gcGF0aAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4geyB0ZXh0LCBsaW5rIH0KICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICAgIHJldHVybiBbLi4udXNlck5hdiwgbGFuZ3VhZ2VEcm9wZG93bl0KICAgICAgfQoKICAgICAgLy8gYmxvZ0NvbmZpZyDnmoTlpITnkIbvvIzmoLnnu53phY3nva7oh6rliqjmt7vliqDliIbnsbvlkozmoIfnrb4KICAgICAgY29uc3QgYmxvZ0NvbmZpZyA9IHRoaXMuJHRoZW1lQ29uZmlnLmJsb2dDb25maWcgfHwge30KICAgICAgY29uc3QgaXNIYXNDYXRlZ29yeSA9IHVzZXJOYXYuc29tZShpdGVtID0+IHsKICAgICAgICBpZiAoYmxvZ0NvbmZpZy5jYXRlZ29yeSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0udGV4dCA9PT0gKGJsb2dDb25maWcuY2F0ZWdvcnkudGV4dCB8fCAn5YiG57G7JykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9CiAgICAgIH0pCiAgICAgIGNvbnN0IGlzSGFzVGFnID0gdXNlck5hdi5zb21lKGl0ZW0gPT4gewogICAgICAgIGlmIChibG9nQ29uZmlnLnRhZykgewogICAgICAgICAgcmV0dXJuIGl0ZW0udGV4dCA9PT0gKGJsb2dDb25maWcudGFnLnRleHQgfHwgJ+agh+etvicpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICB9KQoKICAgICAgaWYgKCFpc0hhc0NhdGVnb3J5ICYmIE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKGJsb2dDb25maWcsICdjYXRlZ29yeScpKSB7CiAgICAgICAgY29uc3QgY2F0ZWdvcnkgPSBibG9nQ29uZmlnLmNhdGVnb3J5CiAgICAgICAgY29uc3QgJGNhdGVnb3JpZXMgPSB0aGlzLiRjYXRlZ29yaWVzCiAgICAgICAgdXNlck5hdi5zcGxpY2UocGFyc2VJbnQoY2F0ZWdvcnkubG9jYXRpb24gfHwgMikgLSAxLCAwLCB7CiAgICAgICAgICBpdGVtczogJGNhdGVnb3JpZXMubGlzdC5tYXAoaXRlbSA9PiB7CiAgICAgICAgICAgIGl0ZW0ubGluayA9IGl0ZW0ucGF0aAogICAgICAgICAgICBpdGVtLnRleHQgPSBpdGVtLm5hbWUKICAgICAgICAgICAgcmV0dXJuIGl0ZW0KICAgICAgICAgIH0pLAogICAgICAgICAgdGV4dDogY2F0ZWdvcnkudGV4dCB8fCAn5YiG57G7JywKICAgICAgICAgIHR5cGU6ICdsaW5rcycsCiAgICAgICAgICBpY29uOiAncmVjby1jYXRlZ29yeScKICAgICAgICB9KQogICAgICB9CiAgICAgIGlmICghaXNIYXNUYWcgJiYgT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwoYmxvZ0NvbmZpZywgJ3RhZycpKSB7CiAgICAgICAgY29uc3QgdGFnID0gYmxvZ0NvbmZpZy50YWcKICAgICAgICB1c2VyTmF2LnNwbGljZShwYXJzZUludCh0YWcubG9jYXRpb24gfHwgMykgLSAxLCAwLCB7CiAgICAgICAgICBsaW5rOiAnL3RhZy8nLAogICAgICAgICAgdGV4dDogdGFnLnRleHQgfHwgJ+agh+etvicsCiAgICAgICAgICB0eXBlOiAnbGlua3MnLAogICAgICAgICAgaWNvbjogJ3JlY28tdGFnJwogICAgICAgIH0pCiAgICAgIH0KCiAgICAgIHJldHVybiB1c2VyTmF2CiAgICB9LAoKICAgIHVzZXJMaW5rcyAoKSB7CiAgICAgIHJldHVybiAodGhpcy5uYXYgfHwgW10pLm1hcChsaW5rID0+IHsKICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihyZXNvbHZlTmF2TGlua0l0ZW0obGluayksIHsKICAgICAgICAgIGl0ZW1zOiAobGluay5pdGVtcyB8fCBbXSkubWFwKHJlc29sdmVOYXZMaW5rSXRlbSkKICAgICAgICB9KQogICAgICB9KQogICAgfSwKCiAgICByZXBvTGluayAoKSB7CiAgICAgIGNvbnN0IHsgcmVwbyB9ID0gdGhpcy4kdGhlbWVDb25maWcKICAgICAgaWYgKHJlcG8pIHsKICAgICAgICByZXR1cm4gL15odHRwcz86Ly50ZXN0KHJlcG8pCiAgICAgICAgICA/IHJlcG8KICAgICAgICAgIDogYGh0dHBzOi8vZ2l0aHViLmNvbS8ke3JlcG99YAogICAgICB9CiAgICAgIHJldHVybiAnJwogICAgfSwKCiAgICByZXBvTGFiZWwgKCkgewogICAgICBpZiAoIXRoaXMucmVwb0xpbmspIHJldHVybgogICAgICBpZiAodGhpcy4kdGhlbWVDb25maWcucmVwb0xhYmVsKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHRoZW1lQ29uZmlnLnJlcG9MYWJlbAogICAgICB9CgogICAgICBjb25zdCByZXBvSG9zdCA9IHRoaXMucmVwb0xpbmsubWF0Y2goL15odHRwcz86XC9cL1teL10rLylbMF0KICAgICAgY29uc3QgcGxhdGZvcm1zID0gWydHaXRIdWInLCAnR2l0TGFiJywgJ0JpdGJ1Y2tldCddCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGxhdGZvcm1zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29uc3QgcGxhdGZvcm0gPSBwbGF0Zm9ybXNbaV0KICAgICAgICBpZiAobmV3IFJlZ0V4cChwbGF0Zm9ybSwgJ2knKS50ZXN0KHJlcG9Ib3N0KSkgewogICAgICAgICAgcmV0dXJuIHBsYXRmb3JtCiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gJ1NvdXJjZScKICAgIH0KICB9Cn0K"},null]}